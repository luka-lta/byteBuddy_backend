name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: docker compose build

      - name: Save Docker image
        uses: actions/upload-artifact@v2
        with:
          name: bytebuddy-image
          path: /tmp/.buildx-cache

  code_style:
    runs-on: ubuntu-latest
    needs: build

    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 80:80
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Docker image
        uses: actions/download-artifact@v2
        with:
          name: my-app-image
          path: /tmp/.buildx-cache

      - name: Load Docker image
        run: docker load -i /tmp/.buildx-cache

      - name: Set up Docker Compose
        run: docker-compose up -d

      - name: Wait for MySQL to be ready
        run: |
          while ! docker-compose exec mysql mysqladmin --user=root --password=1234 ping --silent &> /dev/null ; do
            echo "Waiting for database connection..."
            sleep 5
          done

      - name: Run PHPCS
        run: docker-compose exec php-fpm vendor/bin/phpcs --standard=PSR12 /app/src

      - name: Run PHPMD
        run: docker-compose exec php-fpm vendor/bin/phpmd /app/src text cleancode,codesize,controversial,design,naming,unusedcode

      - name: Tear down Docker Compose
        if: always()
        run: docker-compose down
